import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.media_group import MediaGroupBuilder

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7759560584:AAGLdRQkKSDSORJzwmf0TqQmR8hH0thcFWA"

# ID –≥—Ä—É–ø–ø—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
SUPPORT_CHAT_ID = -1002528638847

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üñ® –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º")],
        [KeyboardButton(text="üíª –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")],
        [KeyboardButton(text="üì≤ –£—Å—Ç–∞–Ω–æ–≤–∫–∞")],
        [KeyboardButton(text="üñ• –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è")],
        [KeyboardButton(text="‚öíÔ∏è –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–°")],
        [KeyboardButton(text="üî® –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ò–°")],     
#        [KeyboardButton(text="üñä –ü—Ä–æ–±–ª–µ–º—ã —Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é")],   
        [KeyboardButton(text="‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º
printer_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üñ® –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç")],
        [KeyboardButton(text="üìÉ –ü—Ä–∏–Ω—Ç–µ—Ä –∑–∞–∂–µ–≤—ã–≤–∞–µ—Ç –±—É–º–∞–≥—É")],
        [KeyboardButton(text="‚ÅâÔ∏è –ü—Ä–∏–Ω—Ç–µ—Ä –ø–µ—á–∞—Ç–∞—Ç–µ—Ç —Å –¥–µ—Ñ–µ–∫—Ç–∞–º–∏")],
        [KeyboardButton(text="üìÑ –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –±—É–º–∞–≥—É")],
        [KeyboardButton(text="üîå –ü—Ä–∏–Ω—Ç–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ")],
        [KeyboardButton(text="üîç –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û
installation_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üíª –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –û—Ñ–∏—Å")],
        [KeyboardButton(text="üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")],
        [KeyboardButton(text="üìà –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞")],
        [KeyboardButton(text="üî¨ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")],
        [KeyboardButton(text="üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–æ–≥–æ –ü–û")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–°
doesntwork_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")],
        [KeyboardButton(text="üìà –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –†–ò–° –ê—Ä—Ö–∏–º–µ–¥")],
        [KeyboardButton(text="üî¨ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")],
        [KeyboardButton(text="üì• –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥—Ä—É–≥–∞—è –ò–°")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ò–°
problemwork_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")],
        [KeyboardButton(text="üìà –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –†–ò–° –ê—Ä—Ö–∏–º–µ–¥")],
        [KeyboardButton(text="üî¨ –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")],
        [KeyboardButton(text="üì• –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –¥—Ä—É–≥–æ–π –ò–°")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)


# —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è
terminalst_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üíæ –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è –∑–∞–≤–∏—Å–ª–∞")],
        [KeyboardButton(text="üñ• –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º
PKproblem_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéû –ú–æ–Ω–∏—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –¥–µ—Ñ–µ–∫—Ç–∞–º–∏")],
        [KeyboardButton(text="üñ• –ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è")],
        [KeyboardButton(text="‚öôÔ∏è –ö–æ–º–ø—å—é—Ç–µ—Ä —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è–º–∏")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

# –≠–ª.–ø–æ–¥–ø–∏—Å—å
#signature_keyboard = ReplyKeyboardMarkup(
#    keyboard=[
#        [KeyboardButton(text="üñå –ù–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç")],
#        [KeyboardButton(text="üñã –ù–µ –≤—ã—Å–≤–µ—á–∏–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ")],
#        [KeyboardButton(text="üñã –î—Ä—É–≥–∞—è —Å–∏—Å—Ç–µ–º–∞ –õ–õ–û\–£–ú–†–°\1–°\–¥—Ä")],
#        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
#    ],
#    resize_keyboard=True
#)

# –ú–∞–∫–µ—Ç –∑–∞—è–≤–∫–∏
TEMPLATE_TEXT = (
    "üîπ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è:\n\n"
    "**IP –ê–¥—Ä–µ—Å:** \n"
    "**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** \n"
    "**–ò–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:** \n"
    "**MAC –ê–¥—Ä–µ—Å:** \n"
    "**–î–æ–º–µ–Ω:** \n"
    "**–û—Ç–¥–µ–ª–µ–Ω–∏–µ:** \n"
    "**–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –æ—à–∏–±–∫—É, –ø–æ—è–≤–∏–≤—à—É—é—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ:** \n\n"
    "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ —Ñ–æ—Ç–æ –∫ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ."
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–∏–∏ —Å –≤–æ–∑–Ω–∏–∫—à–µ–π –ø—Ä–æ–±–ª–µ–º–æ–π.", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º
@dp.message(lambda message: message.text == "üñ® –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º")
async def problem_with_printer(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º:", reply_markup=printer_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º
@dp.message(lambda message: message.text == "üñ® –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –ø–µ—á–∞—Ç–∞–µ—Ç")
async def printer_not_printing(message: types.Message):
    await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å.")

@dp.message(lambda message: message.text == "üìÉ –ü—Ä–∏–Ω—Ç–µ—Ä –∑–∞–∂–µ–≤—ã–≤–∞–µ—Ç –±—É–º–∞–≥—É")
async def printer_not_turning_on(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è.")

@dp.message(lambda message: message.text == "‚ÅâÔ∏è –ü—Ä–∏–Ω—Ç–µ—Ä –ø–µ—á–∞—Ç–∞—Ç–µ—Ç —Å –¥–µ—Ñ–µ–∫—Ç–∞–º–∏")
async def printer_defects(message: types.Message):
    await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.")

@dp.message(lambda message: message.text == "üìÑ –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –±—É–º–∞–≥—É")
async def printer_not_peper(message: types.Message):
    await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å.")

@dp.message(lambda message: message.text == "üîå –ü—Ä–∏–Ω—Ç–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ")
async def printer_not_system(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏ –∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω–∏—è.")

@dp.message(lambda message: message.text == "üîç –ü—Ä–∏–Ω—Ç–µ—Ä –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
async def printer_not_displaying(message: types.Message):
    await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É –ü–û
@dp.message(lambda message: message.text == "üì≤ –£—Å—Ç–∞–Ω–æ–≤–∫–∞")
async def mis_ariadna_installation(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", reply_markup=installation_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É –ü–û
@dp.message(lambda message: message.text == "üíª –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –û—Ñ–∏—Å")
async def office_installation(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –û—Ñ–∏—Å.")

@dp.message(lambda message: message.text == "üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")
async def mis_ariadna_installation(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–º —Ñ–∞–π–ª–∞–º –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞.")

@dp.message(lambda message: message.text == "üìà –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞")
async def ris_ariadna_installation(message: types.Message):
    await message.answer("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.")

@dp.message(lambda message: message.text == "üî¨ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")
async def lis_acrosslab_installation(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –ü–û –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë.")

@dp.message(lambda message: message.text == "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä—É–≥–æ–≥–æ –ü–û")
async def other_software_installation(message: types.Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –∫–∞–∫–æ–µ –ü–û –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–°
@dp.message(lambda message: message.text == "‚öíÔ∏è –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–°")
async def mis_dont_work(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å", reply_markup=doesntwork_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ò–°
@dp.message(lambda message: message.text == "üìä –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")
async def office_installation(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –û—Ñ–∏—Å.")

@dp.message(lambda message: message.text == "üìà –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –†–ò–° –ê—Ä—Ö–∏–º–µ–¥")
async def mis_ariadna_installation(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–º —Ñ–∞–π–ª–∞–º –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞.")

@dp.message(lambda message: message.text == "üî¨ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")
async def ris_ariadna_installation(message: types.Message):
    await message.answer("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.")

@dp.message(lambda message: message.text == "üì• –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥—Ä—É–≥–∞—è –ò–°")
async def lis_acrosslab_installation(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –ü–û –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ò–°
@dp.message(lambda message: message.text == "üî® –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ò–°")
async def mis_problem_work(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å", reply_markup=problemwork_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ  –ò–°
@dp.message(lambda message: message.text == "üìä –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞")
async def problem_mis_IS(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –û—Ñ–∏—Å.")

@dp.message(lambda message: message.text == "üìà –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –†–ò–° –ê—Ä—Ö–∏–º–µ–¥")
async def problem_ris_IS(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–º —Ñ–∞–π–ª–∞–º –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞.")

@dp.message(lambda message: message.text == "üî¨ –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë")
async def problem_AcrossLAB(message: types.Message):
    await message.answer("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.")

@dp.message(lambda message: message.text == "üì• –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –¥—Ä—É–≥–æ–π –ò–°")
async def problem_other_IC(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –ü–û –õ–ò–° –ê–∫—Ä–æ—Å—Å–õ–ê–ë.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è
@dp.message(lambda message: message.text == "üñ• –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è")
async def terminal_station_work(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å", reply_markup=terminalst_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è
@dp.message(lambda message: message.text == "üíæ –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è –∑–∞–≤–∏—Å–ª–∞")
async def hungup_terminalst(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –û—Ñ–∏—Å.")

@dp.message(lambda message: message.text == "üñ• –¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è")
async def doesnt_turn_on_terminalst(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–º —Ñ–∞–π–ª–∞–º –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –ü–ö
@dp.message(lambda message: message.text == "üíª –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞")
async def mis_problem_work(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å", reply_markup=PKproblem_keyboard)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –ü—Ä–æ–±–ª–µ–º—ã —Å –ü–ö
@dp.message(lambda message: message.text == "üéû –ú–æ–Ω–∏—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –¥–µ—Ñ–µ–∫—Ç–∞–º–∏")
async def problem_picture_def(message: types.Message):
    await message.answer("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –û—Ñ–∏—Å.")

@dp.message(lambda message: message.text == "üñ• –ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è")
async def computer_doesnt_work(message: types.Message):
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–º —Ñ–∞–π–ª–∞–º –ú–ò–° –ê—Ä–∏–∞–¥–Ω–∞.")

@dp.message(lambda message: message.text == "‚öôÔ∏è –ö–æ–º–ø—å—é—Ç–µ—Ä —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è–º–∏")
async def computer_malfunction(message: types.Message):
    await message.answer("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ü–û –†–ò–° –ê—Ä–∏–∞–¥–Ω–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.")



# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
@dp.message(lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ü–∏–π:", reply_markup=menu_keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞"
@dp.message(lambda message: message.text == "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞")
async def send_issue_template(message: types.Message):
    await message.answer(TEMPLATE_TEXT, parse_mode="Markdown")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞—è–≤–∫–∏
def is_valid_issue(text: str) -> bool:
    required_fields = ["IP –ê–¥—Ä–µ—Å", "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–ò–º—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞", "MAC –ê–¥—Ä–µ—Å", "–î–æ–º–µ–Ω", "–û—Ç–¥–µ–ª–µ–Ω–∏–µ", "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É"]
    return all(field in text for field in required_fields)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
@dp.message(lambda message: message.text and not message.photo)
async def handle_text_issue(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É"""
    
    if not is_valid_issue(message.text):
        await message.answer("‚ö†Ô∏è –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–∫–µ—Ç—É! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–Ω–æ–≤–∞.", parse_mode="Markdown")
        return

    user_info = f"üë§ {message.from_user.full_name} (@{message.from_user.username}) –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É:\n\n"
    issue_text = user_info + message.text

    await bot.send_message(SUPPORT_CHAT_ID, issue_text, parse_mode="Markdown")

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    support_group_link = "https://t.me/+ug7iZf6Jh5E5ZWNi"  
    response_text = (
        "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ–º–µ - –¢–ü –∏–Ω—Ñ–æ—Å–∏—Å—Ç–µ–º –ì–ú–ë.\n\n"
        f"üîó <a href='{support_group_link}'>–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</a>"
    )
    await message.answer(response_text, parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—è–≤–æ–∫ —Å —Ñ–æ—Ç–æ
@dp.message(lambda message: message.photo)
async def handle_photo_issue(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫—É —Å —Ñ–æ—Ç–æ"""
    
    if not message.caption or not is_valid_issue(message.caption):
        await message.answer("‚ö†Ô∏è –í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –≤–º–µ—Å—Ç–µ —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –º–∞–∫–µ—Ç–æ–º!", parse_mode="Markdown")
        return

    user_info = f"üë§ {message.from_user.full_name} (@{message.from_user.username}) –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É:\n\n"
    issue_text = user_info + message.caption

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é (–º–∞–∫–µ—Ç–æ–º)
    photo = message.photo[-1]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞
    await bot.send_photo(SUPPORT_CHAT_ID, photo.file_id, caption=issue_text, parse_mode="Markdown")

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    support_group_link = "https://t.me/+ug7iZf6Jh5E5ZWNi" 
    response_text = (
        "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.\n\n"
        f"üîó <a href='{support_group_link}'>–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏</a>"
    )
    await message.answer(response_text, parse_mode="HTML")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())